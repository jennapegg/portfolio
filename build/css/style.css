/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-family: 'Open Sans', sans-serif;
  font-size: 15px; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'Oswald', sans-serif; }

.index {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background: rgba(13, 65, 21, 0.8); }
  .index .indexabout {
    width: 90%;
    color: #e2e4eb;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    min-height: 60vh;
    text-align: center; }
    @media (min-width: 600px) {
      .index .indexabout {
        height: 90vh;
        min-height: 500px;
        max-height: 650px; } }
    @media (min-width: 1080px) {
      .index .indexabout {
        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
            -ms-flex-direction: row;
                flex-direction: row;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center; } }
    .index .indexabout p:first-of-type {
      padding-bottom: 10px;
      text-align: left; }
    .index .indexabout a {
      color: #e2e4eb;
      text-decoration: none;
      border: 1px solid #e2e4eb;
      padding: 5px; }
      .index .indexabout a:hover {
        color: #0bad23;
        border: 1px solid #0bad23; }
    @media (min-width: 1080px) {
      .index .indexabout .aboutme {
        width: 50%;
        height: 80%; } }
    .index .indexabout .seeprojects {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center;
      background: url(../../images/projectsbackground.png) no-repeat;
      background-size: cover;
      height: 250px;
      margin-bottom: 30px; }
      @media (min-width: 1080px) {
        .index .indexabout .seeprojects {
          width: 50%;
          height: 80%; } }

.indexname {
  background: url(../../images/vinebackgroundmobile.jpg);
  background-size: cover;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  height: 90vh;
  min-height: 450px;
  max-height: 650px;
  color: #e2e4eb; }
  @media (min-width: 600px) {
    .indexname {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row;
      -webkit-box-align: end;
          -ms-flex-align: end;
              align-items: flex-end;
      height: 70vh;
      min-height: 450px;
      max-height: 450px; } }
  @media (min-width: 1080px) {
    .indexname {
      min-height: 550px; } }
  .indexname img {
    border-radius: 50%;
    height: 250px; }
    @media (min-width: 600px) {
      .indexname img {
        border-radius: 20%;
        height: 300px;
        position: absolute;
        left: 5%;
        top: 150px; } }
    @media (min-width: 1080px) {
      .indexname img {
        height: 400px;
        top: 170px; } }
  .indexname .description {
    background: #0d4115;
    width: 100%;
    text-align: center;
    margin-top: 15vh; }
    @media (min-width: 600px) {
      .indexname .description {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
            -ms-flex-direction: column;
                flex-direction: column;
        -webkit-box-align: end;
            -ms-flex-align: end;
                align-items: flex-end;
        padding-right: 10%;
        margin-top: 0; } }
    @media (min-width: 600px) {
      .indexname .description h1 {
        margin-right: 12px; } }
    @media (min-width: 1080px) {
      .indexname .description h1 {
        font-size: 3rem;
        margin-right: 0;
        margin-top: 10px; } }
    .indexname .description p {
      font-size: 20px;
      font-weight: bolder; }
      @media (min-width: 1080px) {
        .indexname .description p {
          font-size: 25px;
          margin: 0 0 20px 0; } }

.name {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: reverse;
      -ms-flex-direction: column-reverse;
          flex-direction: column-reverse;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  height: 300px;
  background: url(../../images/vinebackgroundmobile.jpg);
  background-size: cover;
  color: #e2e4eb; }
  .name img {
    width: 150px;
    height: 165px;
    border-radius: 50%; }
  .name h1 {
    background: rgba(13, 65, 21, 0.8);
    border-radius: 30px;
    width: 45%;
    text-align: center; }

.index .about {
  width: 90%;
  color: #e2e4eb;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-pack: distribute;
      justify-content: space-around; }

.projects {
  background: rgba(13, 65, 21, 0.8); }
  .projects .gallery {
    display: inline-block;
    width: 100%;
    height: 200px;
    -o-object-fit: fill;
       object-fit: fill; }
    @media (min-width: 600px) {
      .projects .gallery {
        width: 49%; }
        .projects .gallery:nth-of-type(odd) {
          margin-left: 0.75%; } }
    .projects .gallery:last-of-type {
      margin-bottom: 30px; }
    .projects .gallery:first-of-type {
      margin-top: 30px; }
    .projects .gallery img {
      width: 100%;
      height: 100%;
      -o-object-fit: cover;
         object-fit: cover; }
    .projects .gallery .title {
      display: none;
      width: 50%;
      text-align: center;
      background: #0d4115;
      color: #e2e4eb;
      padding: 10px;
      border-radius: 40px;
      margin-left: 25%; }
      .projects .gallery .title:hover {
        color: #0bad23; }
    .projects .gallery .description {
      color: #e2e4eb; }

header {
  background: #0d4115;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  width: 100%; }
  @media (min-width: 600px) {
    header {
      -webkit-box-pack: justify;
          -ms-flex-pack: justify;
              justify-content: space-between; } }
  header .nav {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    width: 50%; }
    @media (min-width: 600px) {
      header .nav {
        width: 30%;
        -ms-flex-pack: distribute;
            justify-content: space-around; } }
  @media (min-width: 600px) {
    header .home {
      padding-left: 4%; } }
  header a {
    color: #e2e4eb;
    text-decoration: none; }
    header a:hover {
      color: #0bad23; }

footer {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background: #0d4115;
  color: #e2e4eb;
  width: 100%; }
  @media (min-width: 600px) {
    footer {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row;
      -webkit-box-pack: justify;
          -ms-flex-pack: justify;
              justify-content: space-between; } }
  footer .links {
    text-align: center;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
    footer .links p {
      padding: 0 10px; }
    @media (min-width: 600px) {
      footer .links {
        margin-right: 10px;
        padding: 0;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
            -ms-flex-direction: column;
                flex-direction: column; } }
  footer .contact {
    text-align: center;
    margin-top: 10px; }
    @media (min-width: 600px) {
      footer .contact {
        margin-left: 10px;
        text-align: left; } }
  footer p {
    margin-top: 0; }
  footer a {
    color: #e2e4eb;
    text-decoration: none; }
    footer a:hover {
      color: #0bad23; }
  footer i {
    padding-right: 5px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
